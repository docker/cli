version: 2

jobs:

  lint:
    working_directory: /work
    docker: [{image: 'dnephin/docker-circleci-task-runner:17.05'}]
    steps:
      - checkout
      - setup_remote_docker:
            reusable: true
            exclusive: false
      - run:
          command: docker version
      - run:
          name: "Lint"
          command: |
            TASK_UNIQUE_ID=$CIRCLE_BUILD_NUM ./tasks lint

  cross:
    working_directory: /work
    docker: [{image: 'dnephin/docker-circleci-task-runner:17.05'}]
    parallelism: 3
    steps:
      - checkout
      - setup_remote_docker:
            reusable: true
            exclusive: false
      - run:
          name: "Cross"
          command: |
            TASK_UNIQUE_ID=$CIRCLE_BUILD_NUM CID_FILENAME=.cid ./tasks cross
            docker cp $(cat .cid):/go/src/github.com/docker/cli/build /work/build

      - store_artifacts:
          path: /work/build

  test:
    working_directory: /work
    docker: [{image: 'dnephin/docker-circleci-task-runner:17.05'}]
    steps:
      - checkout
      - setup_remote_docker:
            reusable: true
            exclusive: false
      - run:
          name: "Unit Test with Coverage"
          command: |
            TASK_UNIQUE_ID=$CIRCLE_BUILD_NUM CID_FILENAME=.cid ./tasks test-coverage

      - run:
          name: "Upload to Codecov"
          command: |
            docker cp $(cat .cid):/go/src/github.com/docker/cli/coverage.txt coverage.txt
            curl -s https://codecov.io/bash | bash || \
                echo 'Codecov failed to upload'

  validate:
    working_directory: /work
    docker: [{image: 'dnephin/docker-circleci-task-runner:17.05'}]
    steps:
      - checkout
      - setup_remote_docker:
            reusable: true
            exclusive: false
      - run:
          name: "Validate Vendor, Docs, and Code Generation"
          command: |
            rm -f .dockerignore # include .git
            export TASK_UNIQUE_ID=$CIRCLE_BUILD_NUM
            ./tasks ci-validate

  shellcheck:
    working_directory: /work
    docker: [{image: 'dnephin/docker-circleci-task-runner:17.05'}]
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Run shellcheck"
          command: |
            TASK_UNIQUE_ID=$CIRCLE_BUILD_NUM ./tasks shellcheck 

workflows:
  version: 2
  ci:
    jobs:
      - lint
      - cross
      - test
      - validate
      - shellcheck
